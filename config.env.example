# TYPES
# bool: "true", "t" (and variations) and "1" are accepted as True
# list: values separated by commas (whitespace is stripped)
# JSON: string that is JSON parseable


# Django settings

# Generator: https://djecrety.ir/
SECRET_KEY=
# DEBUG: bool
DEBUG=
# ALLOWED_HOSTS: list
ALLOWED_HOSTS=
# HTTPS_ENABLED: bool
HTTPS_ENABLED=
# CORS_ALLOW_ALL_ORIGINS: bool
CORS_ALLOW_ALL_ORIGINS=
# CORS_ALLOWED_ORIGINS: list
CORS_ALLOWED_ORIGINS=
# [OPTIONAL] AUTH_USER_REGISTRATION_ENABLED: bool = False
AUTH_USER_REGISTRATION_ENABLED=


# Admin user

# ADMIN_CREDENTIALS: JSON -> Dictionary containing all the data to create a
# new user. The dictionary here will be passed to the User.objects.create()
# method by unpacking the dictionary; in practice, this means that the
# dictionary keys are case sensitive and should have the exact same name as
# the intended field.
# Any fields not present on the User model will be discarded.
# Due to the way environment variables are defined in a file, the JSON object
# should be wrapped in single quotes. Example:
# '{"username": "admin", "email": "admin@example.com", "password": "password"}'
ADMIN_CREDENTIALS=


# Database settings

# POSTGRES_DB: str
POSTGRES_DB=
# POSTGRES_USER: str
POSTGRES_USER=
# POSTGRES_PASSWORD: str
POSTGRES_PASSWORD=
# POSTGRES_HOST: str
POSTGRES_HOST=
# POSTGRES_PORT: int
POSTGRES_PORT=


# Swagger settings

# [OPTIONAL] SWAGGER_TITLE: str = "API"
SWAGGER_TITLE=
# [OPTIONAL] SWAGGER_DESCRIPTION: str = "API Schema"
SWAGGER_DESCRIPTION=
# [OPTIONAL] SWAGGER_API_VERSION: str = "v1"
SWAGGER_API_VERSION=
# [OPTIONAL] SWAGGER_ADMIN_ONLY: bool = True
SWAGGER_ADMIN_ONLY=
